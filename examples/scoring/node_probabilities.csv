"TCP_FW NodeList:","Attack Vector","Component Complexity","Privileges Required",,,"SHC NodeList:","Attack Vector","Component Complexity","Privileges Required",,,"Comments",,,,,,,,,
Node: services.ctlagent.core  ,Runtime,Medium,Low,0.1013,,Node: services.ctlagent.core  ,Runtime,Medium,Low,0.1013,,,,,,,,,,,
Node: services.ctlagent.grpc  ,Network,Medium,Low,0.3188,,Node: services.ctlagent.grpc  ,Network,Medium,Low,0.3188,,,,,,,,,,,
Node: services.ctlagent.memory  ,Local,Medium,Low,0.2326,,Node: services.ctlagent.memory  ,Local,Medium,Low,0.2326,,,,,,,,,,,
Node: services.ctlagent.syscall  ,Local,Low ,High,0.0737,,Node: services.ctlagent.syscall  ,Local,Low ,High,0.0737,,CC=Low because syscalls are small wrappers around kernel functionality; PR=High because syscall restrictions are possible (ACL/Capabilities),,,,,,,,,
,,,,,,Node: services.ctlagent.shcif  ,Local,Low ,Low,0.1691,,CC=Low because Unix socket option with much less complexity than e.g. TCP socket; PR=High: different users on each side
,,,,,,,,,,,,,,,,,,,,,
Node: services.ctlservice.core  ,Runtime,Medium,Low,0.1013,,Node: services.ctlservice.core  ,Runtime,Medium,Low,0.1013,,,,,,,,,,,
Node: services.ctlservice.grpc  ,Network,Medium,Low,0.3188,,Node: services.ctlservice.grpc  ,Network,Medium,Low,0.3188,,,,,,,,,,,
Node: services.ctlservice.memory  ,Local,Medium,Low,0.2326,,Node: services.ctlservice.memory  ,Local,Medium,Low,0.2326,,,,,,,,,,,
Node: services.ctlservice.syscall  ,Local,Low ,High,0.0737,,Node: services.ctlservice.syscall  ,Local,Low ,High,0.0737,,,,,,,,,,,
,,,,,,Node: services.ctlservice.shcif  ,Local,Low ,Low,0.1691,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,
Node: os.controlOS.grouped  ,Network,High,High,0.1767,,Node: os.controlOS.grouped  ,Network,High,High,0.1767,,,,,,,,,,,
Node: os.fwOS.grouped  ,Network,High,High,0.1767,,Node: os.snicOS.grouped  ,Network,Medium,High,0.1388,,CC=Medium: SNIC OS as embedded OS with less complexity than regular OS,,,,,,,,,
Node: os.computeOS.grouped  ,Network,High,High,0.1767,,Node: os.computeOS.grouped  ,Network,High,High,0.1767,,,,,,,,,,,
Node: os.vm.grouped  ,Network,High,Low,0.4058,,Node: os.vm.grouped  ,Network,High,Low,0.4058,,,,,,,,,,,
Node: os.vm.memory  ,Local,Medium,Low,0.2326,,Node: os.vm.memory  ,Local,Medium,Low,0.2326,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,
Node: net.ethB,Network,Medium,High,0.1388,,,,,,,,,,,,,,,,,
Node: net.pcie ,Local,Medium,High,0.1013,,Node: net.pcie  ,Local,Low ,High,0.0737,,CC=Low: more secure than most PCIe functions because no host-side control over the PCIe function,,,,,,,,,
Node: net.ethAin ,Network,Medium,High,0.1388,,Node: net.ethAin  ,Network,Medium,High,0.1388,,,,,,,,,,,
Node: net.ethAout,Network,Medium,High,0.1388,,Node: net.ethAout  ,Network,Medium,High,0.1388,,,,,,,,,,,
Node: net.ethC ,Network,Medium,High,0.1388,,Node: net.ethC  ,Network,Medium,High,0.1388,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,
Node: iso.vmiso  ,Local,High,Low,0.2960,,Node: iso.memiso  ,Local,High,Low,0.2960,,PR=Low because user/attacker in their VM can do anything without ‘escalating’ their privilege,,,,,,,,,
Node: iso.memiso  ,Local,Medium,Low,0.2326,,Node: iso.vmiso  ,Local,Medium,Low,0.2326,,,,,,,,,,,
Node: iso.pcieiso  ,Local,Medium,Low,0.2326,,Node: iso.pcieiso  ,Local,Medium,Low,0.2326,,,,,,,,,,,
Node: iso.etheriso  ,Network,Medium,Low,0.3188,,Node: iso.vxlaniso  ,Network,Medium,Low,0.3188,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,
Node: services.appfirewall.core  ,Runtime,Medium,Low,0.1013,,Node: services.protocheck.core  ,Runtime,Medium,Low,0.1013,,Only sees payloadcore of checker should be the same; differences in the harness can be mostly ignored,,,,,,,
Node: services.appfirewall.clEP  ,Network,Medium,Low,0.3188,,Node: services.protocheck.clEP  ,Network,Medium,Low,0.3188,,,,,,,,,,,
Node: services.appfirewall.srvEP  ,Network,Medium,Low,0.3188,,Node: services.protocheck.srvEP  ,Network,Medium,Low,0.3188,,,,,,,,,,,
Node: services.appfirewall.memory  ,Local,Medium,Low,0.2326,,Node: services.protocheck.plugin  ,Runtime,Low ,Low,0.0737,,no process boundary between protocheck and shc.server,,,,,,,,,
Node: services.appfirewall.syscall  ,Local,Low ,High,0.0737,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,
,,,,,,Node: shc.client.core  ,Runtime,Medium,Low,0.1013,,,,,,,,,,,
,,,,,,Node: shc.client.tcpssl  ,Network,Medium,Low,0.3188,,,,,,,,,,,
Common scores that are generalizable,,,,,,Node: shc.client.shcif  ,Local,Low ,High,0.1691,,UnixSocket; char-device; … also tcp-socket,,,,,,,,,
group.proc.core,Runtime,Medium,Low,0.1013,,Node: shc.client.memory  ,Local,Medium,Low,0.2326,,,,,,,,,,,
group.grpc,Network,Medium,Low,0.3188,,Node: shc.client.syscall  ,Local,Low ,High,0.0737,,,,,,,,,,,
group.memory,Local,Medium,Low,0.2326,,Node: shc.server.core  ,Runtime,Medium,Low,0.1013,,Slightly higher complexity: process requests and orchestrate links based on commands from client,,,,,,,,,
group.syscall,Local,Low ,High,0.0737,,Node: shc.server.tcpssl  ,Network,Medium,Low,0.3188,,,,,,,,,,,
group.shcif,Local,Low ,Low,0.1691,,Node: shc.server.plugin  ,Runtime,Low ,Low,0.0737,,fixed to runtime: no process boundary crossing,,,,,,,,,
group.OS,Network,High,High,0.1767,,Node: shc.server.shccomm  ,Local,Low ,Low,0.2319,,The edges between the two shcomm is asymmetric; shccomm is based on PCIe and thus LOCAL!,,,,
group.eth,Network,Medium,High,0.1388,,Node: shc.server.memory  ,Local,Medium,Low,0.2326,,,,,,,,,,,
,,,,,,Node: shc.server.syscall  ,Local,Low ,High,0.0737,,,,,,,,,,,
,,,,,,Node: shc.host.core  ,Runtime,Low ,Low,0.0737,,small code base for host functionality,,,,,,,,,
,,,,,,Node: shc.host.shccomm  ,Local,Low ,Low,0.2319,,,,,,,,,,,
,,,,,,Node: shc.host.shcif  ,Local,Low ,High,0.1691,,,,,,,,,,,
,,,,,,Node: shc.host.memory  ,Local,Medium,Low,0.2326,,,,,,,,,,,
,,,,,,Node: shc.host.syscall  ,Local,Low ,High,0.0737,,,,,,,,,,,
